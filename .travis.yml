env:
  global:
    - ADB_INSTALL_TIMEOUT=10
    - ABI=x86_64
    - API=28
    - EMU_FLAVOR=default # use google_apis flavor if no default flavor emulator
    # PATH order is incredibly important. e.g. the 'emulator' script exists in more than one place!
    - ANDROID_HOME=/usr/local/android-sdk
    - TOOLS=${ANDROID_HOME}/tools
    - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${TOOLS}:${TOOLS}/bin:${ANDROID_HOME}/platform-tools:${PATH}

matrix:
  include:
    - language: java
      jdk:
        - oraclejdk8
      sudo: required
      services:
        - docker
      script:
        - mvn --settings .travis/settings.xml clean verify -B -V -DAWS_BUCKET=${AWS_BUCKET}
        # make frontend available for REST-docker
        - cd frontend/datasafe-ui && ng build --deploy-url /static/ --base-href /static/ && mv dist ../../datasafe-rest-impl/target/dist && cd ../..
      deploy:
        - provider: script
          skip_cleanup: true
          script: /bin/bash .travis/deploy.sh
          on:
            tags: true
            condition: "$TRAVIS_TAG =~ ^v([[:digit:]]+\\.)+[[:digit:]]+(-[[:digit:]]+)?(-SNAPSHOT)?$"

        - provider: script
          skip_cleanup: true
          script: /bin/bash .travis/deploy_develop_to_openshift.sh
          on:
            branch: develop

        - provider: script
          skip_cleanup: true
          script: /bin/bash .travis/upload_dockerhub.sh
          on:
            all_branches: true
            tags: true
            condition: "$TRAVIS_TAG =~ ^v([[:digit:]]+\\.)+[[:digit:]]+(-[[:digit:]]+)?(-SNAPSHOT)?$"
      before_install:
        - curl -L https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz > oc-cli.tar.gz
        - tar -xzf oc-cli.tar.gz
        - sudo mv ./openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit/oc /usr/local/bin

      # preparations to build frontend
      install:
        - nvm install 11.12.0
        - npm install -g @angular/cli
        - cd frontend/datasafe-ui && npm install && cd ../..

      after_success:
        - /bin/bash .travis/codecov_bash.sh    
    - language: android
      jdk: oraclejdk8
      dist: trusty
      sudo: false
      notifications:
      email: false
      before_cache:
        - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
      cache:
        directories:
          - $HOME/.gradle/caches/
          - $HOME/.gradle/wrapper/
      branches:
        except:
          - gh-pages
      android:
      components:
        # installing tools to start, then use `sdkmanager` below to get the rest
        - tools
      licenses:
        - 'android-sdk-preview-license-.+'
        - 'android-sdk-license-.+'
        - 'google-gdk-license-.+'
      # Get everything needed for android processes
      install:
        - echo 'count=0' > /home/travis/.android/repositories.cfg # Avoid harmless sdkmanager warning
        - echo y | sdkmanager "platform-tools" >/dev/null
        - echo y | sdkmanager "tools" >/dev/null # A second time per Travis docs, gets latest versions
        - echo y | sdkmanager "build-tools;28.0.3" >/dev/null # Implicit gradle dependency - gradle drives changes
        - echo y | sdkmanager "platforms;android-$API" >/dev/null # We need the API of the emulator we will run
        - echo y | sdkmanager "platforms;android-28" >/dev/null # We need the API of the current compileSdkVersion from gradle.properties
        - echo y | sdkmanager --channel=4 "emulator" >/dev/null # Use canary channel to get emulator 29.x for x86_64 image support
      script:
        - bash .buildscripts/build-and-deploy-snapshot.sh