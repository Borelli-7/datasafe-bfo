# Android related travis settings start here
language: android
jdk: oraclejdk8
dist: trusty
sudo: false
# Android related travis settings end here

env:
  global:
    # Android related global Environment Variables start here
    - ADB_INSTALL_TIMEOUT=10
    - ABI=x86_64
    - API=28
    - EMU_FLAVOR=default # use google_apis flavor if no default flavor emulator
    # PATH order is incredibly important. e.g. the 'emulator' script exists in more than one place!
    - ANDROID_HOME=/usr/local/android-sdk
    - TOOLS=${ANDROID_HOME}/tools
    - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${TOOLS}:${TOOLS}/bin:${ANDROID_HOME}/platform-tools:${PATH}
    # Android related global Environment Variables end here

notifications:
  email: false

branches:
  except:
    - gh-pages

stages:
  - Build
  - Deploy

matrix:
  fast_finish: true
  include: 
  # Java related Travis logic starts here
    - language: java
      sudo: required
      stage: Build
      name: Java Build & Deploy
      services:
        - docker
      before_script: skip
      script:
        - mvn --settings .travis/settings.xml clean verify -B -V -DAWS_BUCKET=${AWS_BUCKET}
        # make frontend available for REST-docker
        - cd frontend/datasafe-ui && ng build --deploy-url /static/ --base-href /static/ && mv dist ../../datasafe-rest-impl/target/dist && cd ../..
      deploy:
        - provider: script
          skip_cleanup: true
          script: /bin/bash .travis/deploy.sh
          on:
            tags: true
            condition: "$TRAVIS_TAG =~ ^v([[:digit:]]+\\.)+[[:digit:]]+(-[[:digit:]]+)?(-SNAPSHOT)?$"

        - provider: script
          skip_cleanup: true
          script: /bin/bash .travis/deploy_develop_to_openshift.sh
          on:
            branch: develop

        - provider: script
          skip_cleanup: true
          script: /bin/bash .travis/upload_dockerhub.sh
          on:
            all_branches: true
            tags: true
            condition: "$TRAVIS_TAG =~ ^v([[:digit:]]+\\.)+[[:digit:]]+(-[[:digit:]]+)?(-SNAPSHOT)?$"
      before_install:
        - curl -L https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz > oc-cli.tar.gz
        - tar -xzf oc-cli.tar.gz
        - sudo mv ./openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit/oc /usr/local/bin

      # preparations to build frontend
      install:
        - nvm install 11.12.0
        - npm install -g @angular/cli
        - cd frontend/datasafe-ui && npm install && cd ../..

      after_success:
        - /bin/bash .travis/codecov_bash.sh
    # Java related Travis logic ends here
    # Android related Travis logic starts here until endof file
    - env: API=21
      stage: Build
      name: Android UI Test API 21
    - env: API=25
      stage: Build
      name: Android UI Test API 25
    - env: API=28
      before_script: skip
      script:
        - bash datasafe-android/.buildscripts/build-and-deploy-snapshot.sh
      stage: Deploy
      name: Android Deploy


android:
  components:
    # installing tools to start, then use `sdkmanager` below to get the rest
    - tools

licenses:
  - 'android-sdk-preview-license-.+'
  - 'android-sdk-license-.+'
  - 'google-gdk-license-.+'

# Get everything needed for android processes
install:
  - echo 'count=0' > /home/travis/.android/repositories.cfg # Avoid harmless sdkmanager warning
  - echo y | sdkmanager "platform-tools" >/dev/null
  - echo y | sdkmanager "tools" >/dev/null # A second time per Travis docs, gets latest versions
  - echo y | sdkmanager "build-tools;28.0.3" >/dev/null # Implicit gradle dependency - gradle drives changes
  - echo y | sdkmanager "platforms;android-$API" >/dev/null # We need the API of the emulator we will run
  - echo y | sdkmanager "platforms;android-28" >/dev/null # We need the API of the current compileSdkVersion from gradle.properties
  - echo y | sdkmanager --channel=4 "emulator" >/dev/null # Use canary channel to get emulator 29.x for x86_64 image support

# Emulator Management: Create, Start and Wait
before_script:
  - echo y | sdkmanager "extras;android;m2repository" >/dev/null
  - echo y | sdkmanager "system-images;android-$API;$EMU_FLAVOR;$ABI" >/dev/null # install our emulator
  - echo no | avdmanager create avd --force -n test -k "system-images;android-$API;$EMU_FLAVOR;$ABI" -c 10M
  - emulator -verbose -avd test -no-accel -no-snapshot -no-window $AUDIO -camera-back none -camera-front none -selinux permissive -qemu -m 2048 &
  - bash datasafe-android/.buildscripts/android-wait-for-emulator.sh
  - adb shell settings put global window_animation_scale 0 &
  - adb shell settings put global transition_animation_scale 0 &
  - adb shell settings put global animator_duration_scale 0 &
  - adb shell input keyevent 82 &

# Called in test stages
script: bash datasafe-android/.buildscripts/run-android-tests.sh