package de.adorsys.datasafe;

import java.util.ArrayList

import de.adorsys.datasafe.business.impl.e2e.performance.fixture.dto.UserFileSystem
import de.adorsys.datasafe.business.impl.e2e.performance.fixture.dto.TestUser
import de.adorsys.datasafe.types.api.actions.WriteRequest

global de.adorsys.datasafe.business.impl.e2e.performance.fixture.generator.RandomPassGate randomPass
global de.adorsys.datasafe.business.impl.e2e.performance.fixture.generator.RandomPathGenerator randomPath
global de.adorsys.datasafe.business.impl.e2e.performance.fixture.generator.RandomContentIdGenerator randomContent
global de.adorsys.datasafe.business.impl.e2e.performance.fixture.generator.HistoryList historyList

dialect  "mvel"

rule "Random write into privatespace"
    no-loop
    when
       $f: UserFileSystem(historyList.canContinue(), randomPass.canPass(25, "WRITE PRIVATE"))
    then
       $f.getPrivateFiles().write(randomPath.generate(), randomContent.randomContentId());
       update($f)
end

rule "Random list privatespace"
    no-loop
    when
       $f: UserFileSystem(historyList.canContinue(), randomPass.canPass(25, "LIST PRIVATE"))
    then
       $f.getPrivateFiles().list(randomPath.generate());
end

rule "Random list inbox"
    no-loop
    when
       $f: UserFileSystem(historyList.canContinue(), randomPass.canPass(25, "LIST INBOX"))
    then
       $f.getInboxFiles().list(randomPath.generate());
end

rule "Random read privatespace"
    no-loop
    when
       $f: UserFileSystem(historyList.canContinue(), !privateFiles.isEmpty(), randomPass.canPass(25, "READ PRIVATE"))
    then
       $f.getPrivateFiles().read($f.getPrivateFiles().getPathRandomly());
end

rule "Random delete privatespace"
    no-loop
    when
       $f: UserFileSystem(historyList.canContinue(), !privateFiles.isEmpty(), randomPass.canPass(25, "DELETE PRIVATE"))
    then
       $f.getPrivateFiles().delete($f.getPrivateFiles().getPathRandomly());
       update($f)
end

rule "Random read inbox"
    no-loop
    when
       $f: UserFileSystem(historyList.canContinue(), !inboxFiles.isEmpty(), randomPass.canPass(25, "READ INBOX"))
    then
       $f.getInboxFiles().read($f.getInboxFiles().getPathRandomly());
end

rule "Random delete inbox"
    no-loop
    when
       $f: UserFileSystem(historyList.canContinue(), !inboxFiles.isEmpty(), randomPass.canPass(25, "DELETE INBOX"))
    then
       $f.getInboxFiles().delete($f.getInboxFiles().getPathRandomly());
       update($f)
end

rule "Random share file"
    no-loop
    when
       $f: UserFileSystem(historyList.canContinue(), !privateFiles.isEmpty(), randomPass.canPass(25, "SHARE"))
       $ts: ArrayList() from collect(UserFileSystem(user != $f))
    then
        $f.
       //$ts.getInboxFiles().write(
       //        randomPath.generateInbox(),
       //        $f.getPrivateFiles().read($f.getPrivateFiles().getPathRandomly())
       //);
       update($ts)
end